# https://taskfile.dev
version: '3'

vars:
  WSL:
    sh: |
        if [ `uname -s` = "Linux" ]; then
          if grep -q "microsoft" <<< `uname -r`; then
            echo true
          else
            echo false
          fi
        else
          echo false
        fi
  GIT_COMMIT:
    sh: git log -n 1 --format=%h
  EXE: bin/grizz{{if eq .WSL "true"}}.exe{{else}}{{exeExt}}{{end}}
  MAIN_CMD: ./cmd/TinGrizzly

  BUILD_CMD: go build -v -ldflags "-X github.com/cebarks/TinGrizzly/internal/util.GitCommit={{.GIT_COMMIT}}" -o {{.EXE}} {{.MAIN_CMD}}

  CFG_EXE: bin/cfgutil{{if eq .WSL "true"}}.exe{{else}}{{exeExt}}{{end}}
  CFG_CMD: ./cmd/cfgutil
  CFG_BUILD_CMD: build -v -ldflags "-X github.com/cebarks/TinGrizzly/internal/util.GitCommit={{.GIT_COMMIT}}" -o {{.CFG_EXE}} {{.CFG_CMD}}

tasks:
  default:
    cmds:
      - task -l
    silent: true

  run:
    desc: run the game
    deps: [build]
    cmds:
      -  ./{{.EXE}}

  gen-config:
    desc: generate a default config
    deps: [build-cfgutil]
    cmds:
      - ./{{.CFG_EXE}}
    sources:
      - ./internal/util/cfg.go
    generates:
      - config.toml.example

  clean:
    desc: clean any log and build files
    cmds:
      - rm -rv log/ bin/ config.toml.example
    preconditions:
      - test -d log || test -d bin

  test:
    desc: run all tests
    cmds:
      - go test ./...

  testv:
    desc: run all tests verbosely (with coverage)
    cmds:
      - go test ./... -cover -covermode atomic -v

  todo:
    desc: find all //TODO comments in the repo
    cmds:
      - grep -nr --exclude="Taskfile.yml" --exclude-dir=".git" "//TODO" . 
    
  build:
    desc: build executable to {{.EXE}}
    cmds:
      - task: build-{{ if eq .WSL "true" }}wsl{{else}}all{{end}}
    sources:
      - ./**/*.go
    generates:
      - ./{{.EXE}}
  
  build-cfgutil:
    desc: builds the cfgutil binary
    cmds:
      - go {{.CFG_BUILD_CMD}}
    sources:
      - ./cmd/cfgutil/**/*.go
      - ./internal/util/cfg.go
    generates:
      - ./{{.CFG_EXE}}

  build-all:
    cmds:
      - CGO_ENABLED=1 {{.BUILD_CMD}}

  build-wsl:
    cmds:
      - CC=x86_64-w64-mingw32-gcc GOOS=windows GOARCH={{ARCH}} CGO_ENABLED=1 {{.BUILD_CMD}}

  stats:
    desc: prints some stats about the project
    silent: true
    cmds:
      - echo "Commits:$(git rev-list --count master)"
      - echo "Go Source files:$(find . -type f -name "*.go" | wc -l)"
      - echo "Lines of Go Source:$(cat `find . -type f -name "*.go"` | wc -l)"
      - echo "Packages:$(go list ./... | wc -l)"
      - echo "Active TODOs:$(task -s todo | wc -l)"
